{"version":3,"sources":["redux/weather-reducer.js","redux/root-reducer.js","redux/store.js","searchbar.component/searchbar.component.jsx","threehrsdisplay/weatherhoursdisplay.component.jsx","redux/weather.selector.js","weatherdisplay/weatherdisplay.component.jsx","App.js","redux/city.action.js","index.js"],"names":["INITIAL_STATE","loading","collection","weatherReducer","state","action","type","payload","combineReducers","weather","middlewares","logger","store","createStore","rootReducer","applyMiddleware","Searchbar","placeholder","handleChange","handleSubmit","value","className","onSubmit","onChange","Weatherhoursdisplay","item","map","key","id","src","icon","alt","description","parseInt","main","temp","dt_txt","replace","selectCollection","createSelector","connect","today","Date","currentDay","getDay","hours","getHours","minutes","getMinutes","console","log","getTime","name","list","wind","speed","pressure","humidity","clouds","all","filter","index","dt","dispatch","setCurrentCity","data","useState","city","setValue","button","setButton","useEffect","fetch","then","response","json","catch","err","alert","event","target","e","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02655d62.chunk.js","sourcesContent":["const INITIAL_STATE = {\r\n    loading:true,\r\n    collection: null,\r\n};\r\n\r\n\r\n\r\nconst weatherReducer = (state = INITIAL_STATE, action) => {\r\n\r\n    switch(action.type) {\r\n        case 'SET_CURRENT_DATA':\r\n            return {\r\n                collection: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n        }\r\n\r\n\r\n};\r\nexport default weatherReducer;","import { combineReducers } from 'redux';\r\n\r\nimport  weatherReducer  from './weather-reducer';\r\n\r\n\r\nexport default combineReducers({\r\n    weather: weatherReducer\r\n})","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\nconst middlewares = [logger];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;","import React from 'react';\r\nimport './searchbar.styles.scss';\r\n\r\n\r\nconst Searchbar = ({placeholder, handleChange , handleSubmit, value }) => (\r\n    <form className=\"form-block\" onSubmit={handleSubmit}>\r\n\r\n    <input className=\"search\" \r\n    value={value}\r\n    type='search'\r\n    onChange={handleChange}\r\n    placeholder={placeholder}/>\r\n\r\n    <button type=\"submit\" className=\"search-button\">search</button>\r\n\r\n    </form>\r\n);\r\n\r\nexport default Searchbar;","import React from 'react';\r\nimport './weatherhoursdisplay.styles.scss';\r\n\r\n\r\n\r\n\r\nconst Weatherhoursdisplay = ({item}) => (\r\n    <div className=\"day\">\r\n        {\r\n            item.weather.map(key =>(\r\n                <img key={key.id} src={`http://openweathermap.org/img/wn/${key.icon}.png`} alt={key.description} />\r\n            ))\r\n        }\r\n\r\n        <span className=\"temperatura\">{parseInt(item.main.temp - 273.15)}°C</span>\r\n        <span>{item.dt_txt.replace(/\\d+-\\d+-\\d+/,\"\")}</span>\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n);\r\n\r\nexport default Weatherhoursdisplay;","import { createSelector } from 'reselect';\r\n\r\nexport const selectWeather = state => state.weather;\r\n\r\nexport const selectCollection = createSelector(\r\n    [selectWeather],\r\n    (weather) => weather.collection\r\n);","import React from 'react';\r\nimport './weatherdisplay.styles.scss';\r\n\r\nimport Weatherhoursdisplay from '../threehrsdisplay/weatherhoursdisplay.component';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { selectCollection } from '../redux/weather.selector';\r\n\r\n\r\n\r\n\r\nconst Weatherdisplay = ( {collection, loading} ) =>{\r\n    let today = new Date();\r\n    let day = today.getDay();\r\n    let daylist = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday \",\"Thursday\",\"Friday\",\"Saturday\"];\r\n    let currentDay=daylist[day];\r\n    let hours = today.getHours();\r\n    let minutes = today.getMinutes();\r\n    \r\n    console.log(today.getTime());\r\n\r\n    console.log(collection);\r\n    return( \r\n\r\n    !loading ?\r\n    (\r\n    <div className=\"display\">\r\n        <div className=\"container-display\">\r\n        \r\n            <div className=\"main-display\">\r\n                <div className=\"titledisplay\">\r\n                    <span className=\"title\">{collection.name}</span>\r\n                    <span className=\"temperatura\">{parseInt(collection.list[0].main.temp - 273.15)}°C</span>\r\n                    <img key={collection.list[0].weather[0].id} src={`http://openweathermap.org/img/wn/${collection.list[0].weather[0].icon}@2x.png`} alt={collection.list[0].weather[0].description} />\r\n                    <span className=\"trenutnovrijeme\">{collection.list[0].weather[0].main}</span>\r\n                </div>\r\n                <div className=\"dateandday\">{currentDay} {hours}:{minutes}{hours > 12 ? \" PM\": \" AM\"}</div>\r\n                <div className=\"ostalipodaci\">\r\n                    <div className=\"leftbox\">\r\n                        <span>Wind: {collection.list[0].wind.speed} m/s</span>\r\n                        <span>Pressure: {collection.list[0].main.pressure}hPa</span>\r\n                    </div>\r\n                    <div className=\"rightbox\">\r\n                        <span>Humidity: {collection.list[0].main.humidity}%</span>\r\n                        <span>Cloudiness: {collection.list[0].clouds.all}%</span>\r\n                    </div>\r\n                 </div>\r\n\r\n                <div className=\"threehoursdisplay\">\r\n\r\n                {\r\n                    collection.list.filter((item,index)=>(index >0 && index <= 8)).map(item => (\r\n                    <Weatherhoursdisplay key={item.dt} item={item}/>\r\n                     ))\r\n                }\r\n                \r\n                </div>\r\n            </div>\r\n    \r\n        </div>\r\n    </div>\r\n    )\r\n    :null\r\n    )\r\n            }\r\n    \r\nconst mapStateToProps = state => ({\r\n    collection: selectCollection(state),\r\n    loading:state.weather.loading\r\n})\r\n\r\nexport default connect(mapStateToProps)(Weatherdisplay);","import React,{ useEffect, useState} from 'react';\n\nimport Searchbar from './searchbar.component/searchbar.component';\nimport Weatherdisplay from './weatherdisplay/weatherdisplay.component';\nimport './App.css';\n\nimport { setCurrentCity } from './redux/city.action';\n\nimport { connect } from 'react-redux';\n\nconst App = ({ setCurrentCity, loading  }) => {\n\nconst [value, setValue] = useState({city:\"Sarajevo\"});\nconst [button, setButton] = useState(false);\n\nconst handleChange = (event) => {\n  setValue({\n    city: event.target.value\n  });\n};\n\nconsole.log(value.city);\n\nconst handleSubmit = (e) => {\n  e.preventDefault();\n  setButton({\n    button: !button\n  });\n};\n\n \nuseEffect(() => {\n\n  fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${value.city}&appid=e90a6a6c93670f061604b464307cb24b`)\n  .then(response => response.json())\n  .then(data =>{\n    setCurrentCity({\n      id: data.city.id,\n      name: data.city.name,\n      list:data.list\n    });\n    setValue({\n      city:''\n    });\n  })\n  .catch(err => {\n    setValue({\n      city:''\n    });\n    alert(\"No city found!\");\n  })\n},[button])\n    return (\n    <div className=\"App\">\n      <div className=\"Header\">\n          <Searchbar value={value.city} handleChange={handleChange} handleSubmit={handleSubmit} placeholder=\"Search for a city...\" />\n          </div>\n            <Weatherdisplay />\n    </div>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentCity: data => dispatch(setCurrentCity(data))\n});\n\nconst mapStateToProps = state => ({\n  loading:state.weather.loading\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","export const setCurrentCity = data => ({\r\n    type: 'SET_CURRENT_DATA',\r\n    payload: data\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport  store  from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}